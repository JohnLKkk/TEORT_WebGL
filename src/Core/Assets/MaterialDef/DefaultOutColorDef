// 输出颜色缓冲材质
Def DefaultOutColorDef{
    Params{
        float gammaFactor;
        bool toneMapping;
    }
    SubTechnology DefaultOutColor{
        Vars{
            vec2 uv0;
        }
        Vs_Shader{
            void main(){
                Context.OutPosition = vec4(Context.InPosition, 1.0f);
                uv0 = Context.InUv0;
            }
        }
        Fs_Shader{
            void main(){
                Context.OutColor = texture(Context.InForwardColorMap, uv0);
                #ifdef Params.toneMapping
                    if(Params.toneMapping){
                        Context.OutColor.rgb = Context.OutColor.rgb / (Context.OutColor.rgb + vec3(1.0f));
                    }
                #endif
                #ifdef Params.gammaFactor
                    Context.OutColor.rgb = pow(Context.OutColor.rgb, vec3(Params.gammaFactor));
                #endif
            }
        }
    }
    Technology{
        Sub_Pass{
            Pass DefaultOutColor{
            }
        }
    }
}
